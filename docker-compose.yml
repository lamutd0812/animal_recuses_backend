version: "3.8"

services: 
  app:
    image: animal-recuses
    build: .
    volumes: 
      - ./:/animal-recuces-backend/rest-api
    environment: 
      - NODE_APP_PRODUCTION_MODE=${NODE_APP_PRODUCTION_MODE}
      - NODE_APP_SERVER_ADDRESS=${NODE_APP_SERVER_ADDRESS}
      - NODE_APP_PORT=${NODE_APP_PORT}

      - NODE_APP_DB_TYPE=${NODE_APP_DB_TYPE}
      - NODE_APP_DB_HOST=${NODE_APP_DB_HOST}
      - NODE_APP_DB_PORT=${NODE_APP_DB_PORT}
      - NODE_APP_DB_USERNAME=${NODE_APP_DB_USERNAME}
      - NODE_APP_DB_PASSWORD=${NODE_APP_DB_PASSWORD}
      - NODE_APP_DB_DATABASE=${NODE_APP_DB_DATABASE}

      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}

      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
    ports:
      - "${NODE_APP_PORT}:${NODE_APP_PORT}"
    restart: unless-stopped
    depends_on: 
      - postgres
      - redis

  postgres:
    image: postgres
    environment: 
     - POSTGRES_PASSWORD=lam123456
    volumes: 
      - postgres-data:/var/lib/postgresql/data
    ports: 
      - "2345:${NODE_APP_DB_PORT}"
    restart: unless-stopped
    environment: 
      - POSTGRES_USER=${NODE_APP_DB_USERNAME}
      - POSTGRES_PASSWORD=${NODE_APP_DB_PASSWORD}
      - POSTGRES_DB=${NODE_APP_DB_DATABASE}

  redis:
    image: redis:6.2.5-alpine
    volumes:
      - .docker/data/redis:/data
    restart: unless-stopped
    user: "1000:1000"

volumes: 
  postgres-data:



